- name: pikube-configuration
  hosts:
    - pikube_control_plane
    - pikube_worker
  tasks:
    - name: ping
      ansible.builtin.ping:
    - name: Add all sudermanjr authorized keys
      ansible.posix.authorized_key:
        user: asuderma
        state: present
        key: https://github.com/sudermanjr.keys
    - name: Install packages
      become: true
      apt:
        pkg:
          - curl
          - git
          - vim
          - linux-modules-extra-raspi
        update_cache: true
    - name: Update all packages
      become: true
      apt:
        update_cache: true
        upgrade: dist
    - name: Check if reboot required
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file
    - name: Reboot if required
      reboot:
      when: reboot_required_file.stat.exists == true
      become: true
    - name: Install on/off shim code
      ansible.builtin.script: onoffshim.sh -y
    - name: Run install script for control plane
      ansible.builtin.script: k3s-install.sh
      when: role == "control_plane"
    - name: get k3s token
      become: true
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: k3s_token_local
      when: role == "control_plane"
    - name: Print returned information
      ansible.builtin.debug:
        msg: "{{ k3s_token_local['content'] | b64decode }}"
      when: role == "control_plane"
    - name: register token
      ansible.builtin.set_fact:
        k3s_token: "{{ k3s_token_local['content'] | b64decode | regex_replace('\n', '') }}"
      when: role == "control_plane"
    - name: Get kubeconfig
      become: true
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: kubeconfig.yaml
        flat: true
      when: role == "control_plane"
    - name: Install worker nodes
      ansible.builtin.script: k3s-install.sh
      when: role == "worker"
      environment:
        K3S_URL: 'https://pikube-0:6443'
        K3S_TOKEN: "{{ hostvars['pikube-0']['k3s_token'] }}"
- name: fix kubeconfig
  hosts: localhost
  tags: ['local']
  tasks:
    - replace:
        path: kubeconfig.yaml
        regexp: '\b(127\.0\.0\.1)(\d*)\b'
        replace: 'pikube-0'
