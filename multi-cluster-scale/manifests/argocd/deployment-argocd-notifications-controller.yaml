# Source: argo-cd/templates/argocd-notifications/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-notifications-controller
  namespace: "argocd"
  labels:
    helm.sh/chart: argo-cd-5.51.6
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: "v2.9.3"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-notifications-controller
      app.kubernetes.io/instance: argocd
  template:
    metadata:
      labels:
        helm.sh/chart: argo-cd-5.51.6
        app.kubernetes.io/name: argocd-notifications-controller
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/component: notifications-controller
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: "v2.9.3"
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: argocd-notifications-controller
      containers:
        - name: notifications-controller
          image: quay.io/argoproj/argocd:v2.9.3
          imagePullPolicy: IfNotPresent
          args:
            - /usr/local/bin/argocd-notifications
            - --metrics-port=9001
            - --loglevel=info
            - --logformat=text
            - --namespace=argocd
            - --argocd-repo-server=argocd-repo-server:8081
          env:
            - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: notificationscontroller.log.level
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
              valueFrom:
                configMapKeyRef:
                  key: notificationscontroller.log.format
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_NAMESPACES
              valueFrom:
                configMapKeyRef:
                  key: application.namespaces
                  name: argocd-cmd-params-cm
                  optional: true
          ports:
          - name: metrics
            containerPort: 9001
            protocol: TCP
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          workingDir: /app
          volumeMounts:
            - name: tls-certs
              mountPath: /app/config/tls
            - name: argocd-repo-server-tls
              mountPath: /app/config/reposerver/tls
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-notifications-controller
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: tls-certs
          configMap:
            name: argocd-tls-certs-cm
        - name: argocd-repo-server-tls
          secret:
            secretName: argocd-repo-server-tls
            optional: true
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
      dnsPolicy: ClusterFirst

